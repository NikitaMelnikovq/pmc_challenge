// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SteelShop.Infrastructure.Data;

#nullable disable

namespace SteelShop.Infrastructure.Migrations
{
    [DbContext(typeof(CatalogDbContext))]
    partial class CatalogDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SteelShop.Core.Entities.Nomenclature", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<double?>("Diameter")
                        .HasColumnType("double precision")
                        .HasColumnName("diameter");

                    b.Property<string>("FormOfLength")
                        .HasColumnType("text")
                        .HasColumnName("formoflength");

                    b.Property<string>("Gost")
                        .HasColumnType("text")
                        .HasColumnName("gost");

                    b.Property<int>("IDCat")
                        .HasColumnType("integer")
                        .HasColumnName("idcat");

                    b.Property<int?>("IDFunctionType")
                        .HasColumnType("integer")
                        .HasColumnName("idfunctiontype");

                    b.Property<int>("IDType")
                        .HasColumnType("integer")
                        .HasColumnName("idtype");

                    b.Property<int?>("IDTypeNew")
                        .HasColumnType("integer")
                        .HasColumnName("idtypenew");

                    b.Property<double?>("Koef")
                        .HasColumnType("double precision")
                        .HasColumnName("koef");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("text")
                        .HasColumnName("manufacturer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<double?>("PipeWallThickness")
                        .HasColumnType("double precision")
                        .HasColumnName("pipewallthickness");

                    b.Property<string>("ProductionType")
                        .HasColumnType("text")
                        .HasColumnName("productiontype");

                    b.Property<string>("ProfileSize2")
                        .HasColumnType("text")
                        .HasColumnName("profilesize2");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean")
                        .HasColumnName("status");

                    b.Property<string>("SteelGrade")
                        .HasColumnType("text")
                        .HasColumnName("steelgrade");

                    b.HasKey("ID");

                    b.HasIndex("IDType", "Diameter", "PipeWallThickness", "Gost", "SteelGrade");

                    b.ToTable("nomenclature", (string)null);
                });

            modelBuilder.Entity("SteelShop.Core.Entities.Prices", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<int>("IDStock")
                        .HasColumnType("integer")
                        .HasColumnName("idstock");

                    b.Property<double?>("NDS")
                        .HasColumnType("double precision")
                        .HasColumnName("nds");

                    b.Property<double?>("PriceLimitM1")
                        .HasColumnType("double precision")
                        .HasColumnName("pricelimitm1");

                    b.Property<double?>("PriceLimitM2")
                        .HasColumnType("double precision")
                        .HasColumnName("pricelimitm2");

                    b.Property<double?>("PriceLimitT1")
                        .HasColumnType("double precision")
                        .HasColumnName("pricelimitt1");

                    b.Property<double?>("PriceLimitT2")
                        .HasColumnType("double precision")
                        .HasColumnName("pricelimitt2");

                    b.Property<decimal?>("PriceM")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("pricem");

                    b.Property<decimal?>("PriceM1")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("pricem1");

                    b.Property<decimal?>("PriceM2")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("pricem2");

                    b.Property<decimal?>("PriceT")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("pricet");

                    b.Property<decimal?>("PriceT1")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("pricet1");

                    b.Property<decimal?>("PriceT2")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("pricet2");

                    b.HasKey("ID", "IDStock");

                    b.ToTable("prices", (string)null);
                });

            modelBuilder.Entity("SteelShop.Core.Entities.Remnants", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<int>("IDStock")
                        .HasColumnType("integer")
                        .HasColumnName("idstock");

                    b.Property<double?>("AvgTubeLength")
                        .HasColumnType("double precision")
                        .HasColumnName("avgtubelength");

                    b.Property<double?>("AvgTubeWeight")
                        .HasColumnType("double precision")
                        .HasColumnName("avgtubeweight");

                    b.Property<double?>("InStockM")
                        .HasColumnType("double precision")
                        .HasColumnName("instockm");

                    b.Property<double?>("InStockT")
                        .HasColumnType("double precision")
                        .HasColumnName("instockt");

                    b.Property<double?>("ReservedM")
                        .HasColumnType("double precision")
                        .HasColumnName("reservedm");

                    b.Property<double?>("ReservedT")
                        .HasColumnType("double precision")
                        .HasColumnName("reservedt");

                    b.Property<double?>("SoonArriveM")
                        .HasColumnType("double precision")
                        .HasColumnName("soonarrivem");

                    b.Property<double?>("SoonArriveT")
                        .HasColumnType("double precision")
                        .HasColumnName("soonarrivet");

                    b.Property<bool?>("UnderTheOrder")
                        .HasColumnType("boolean")
                        .HasColumnName("undertheorder");

                    b.HasKey("ID", "IDStock");

                    b.ToTable("remnants", (string)null);
                });

            modelBuilder.Entity("SteelShop.Core.Entities.Stock", b =>
                {
                    b.Property<int>("IDStock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idstock");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IDStock"));

                    b.Property<string>("StockCity")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("stock");

                    b.Property<string>("StockName")
                        .HasColumnType("text")
                        .HasColumnName("stockname");

                    b.HasKey("IDStock");

                    b.ToTable("stock", (string)null);
                });

            modelBuilder.Entity("SteelShop.Core.Entities.Types", b =>
                {
                    b.Property<int>("IDType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idtype");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IDType"));

                    b.Property<int?>("IDParentType")
                        .HasColumnType("integer")
                        .HasColumnName("idparenttype");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("type");

                    b.HasKey("IDType");

                    b.ToTable("types", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
